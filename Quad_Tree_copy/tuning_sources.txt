https://www.iue.tuwien.ac.at/phd/halama/node112.html

https://www.cs.cmu.edu/~ckingsf/bioinfo-lectures/quadtrees.pdf - διαφάνεια 41

https://courses.cs.vt.edu/~cs3114/Summer15/Notes/T04_PRQuadTrees.pdf - διαφάνεια 14

https://personal.us.es/almar/cg/09quadtrees.pdf - διαφάνεια 20

Για ένα quad tree με capacity=1, 
σε μια ιδανική περίπτωση όπου το δέντρο έβγαινε απολύτως ζυγισμένο,
τότε θα είχε ύψος log4(n). 
Αυτός θα ήταν και ο χρόνος αναζήτησης ενός σημείου.

Στην δική μας περίπτωση το quad tree έχει capacity=d 
και για μήκος πλευράς του περιβάλλοντος τετραγώνου s
και ελάχιστη απόσταση c μεταξύ οποιονδήποτε δύο σημείων του συνόλου, 
το δέντρο έχει ύψος το πολύ log2(sqrt(2)*s/c).

Αν υποθέσουμε ότι το c είναι ανάλογο του d,
τότε το ύψος του δέντρου γίνεται log2(sqrt(2)*s/d).
Αυτό θα είναι περίπου ο χρόνος για να φτάσουμε στο κλαδί.

Όμως, ανάμεσα στα d φύλλα του κλαδιού γίνεται γραμμική αναζήτηση,
η οποία παίρνει χρόνο d.

Συνολικά, ο χρόνος για να βρούμε το κλαδί και στη συνέχεια το φύλλο
είναι το άθροισμα log2(sqrt(2)*s/d) + d
και θέλουμε αυτός ο χρόνος να είναι ίσος με τον χρόνο της ιδανικής περίπτωσης.

simplified:             log2(sqrt(2)*s/d) + d = log4(n)

over-simplified:        log2(1/d) + d = log2(n) 

                        1/d + 2**d = n

over-over-simplified:   d = log2(n)
